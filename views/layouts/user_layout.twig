<!DOCTYPE html>
<html lang="en" class="h-full">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Maker Attendance{% endblock %}</title>
    <link rel="stylesheet" href="{{ css('output.css') }}">
    <script src="{{ npm('preline/dist/preline.js') }}"></script>
    <script src="{{ js('fontawesome.js') }}"></script>
    <script src="{{ js('jquery.js') }}"></script>
    <script src="{{ js('app.js') }}"></script>
</head>
<body class="c-body">

<!-- ========== HEADER ========== -->
<header id="header" class="sticky top-0 inset-x-0 flex flex-wrap md:justify-start md:flex-nowrap z-50 w-full bg-white border-b text-sm py-2.5 md:py-4 dark:bg-slate-900 dark:border-gray-700">
    <nav class="flex flex-nowrap basis-full items-center w-full mx-auto px-4 md:px-8 lg:max-w-[90rem]" aria-label="Global">
        <a class="flex-none rounded-md dark:focus:outline-none dark:focus:ring-1 dark:focus:ring-gray-600" href="{{ path() }}">
            <img class="h-12 w-auto logo dark:block block" src="{{ img('banner_white.png') }}" alt="NFC Attendance">
        </a>

        <div class="flex items-center ms-auto md:w-full md:gap-x-3 md:order-3 md:ms-0">
           <div class="flex items-center relative z-10 ms-auto">
                <div class="lg:ms-1 flex">
                    {% for route, values in app.nav %}
                        <div class="hs-tooltip inline-block [--placement:bottom]">
                            <a class="c-nav-items-tooltip hs-tooltip-toggle" href="{{ path(route) }}">
                                {% if values.2 %} {# Meaning that it is stackable icons #}
                                    <span class="fa-stack {% if app.request.path == route %} current-page fa-beat {% endif %}">
                                        <i class="fa-duotone fa-xl {{ values.0[0] }} fa-stack-1x"></i>
                                        <i class="fa-duotone {{ values.0[1] }} fa-stack-4x text-teal-400" style="position: absolute; bottom: -5px; right: -5px;"></i>
                                    </span>
                                {% else %}
                                    <i class="fa-duotone {{ values.0 }} fa-xl {% if app.request.path == route %} current-page fa-beat {% endif %}"></i>
                                {% endif %}
                                <span class="hs-tooltip-content hs-tooltip-shown:opacity-100 hs-tooltip-shown:visible c-tooltip" role="tooltip">
                                    {{ values.1 }}
                                </span>
                            </a>
                        </div>
                    {% endfor %}
                </div>
               <script>
                   $(document).ready(function () {
                       const HSThemeAppearance = {
                           init() {
                               const defaultTheme = 'default'
                               let theme = localStorage.getItem('hs_theme') || defaultTheme

                               if (document.querySelector('html').classList.contains('dark')) return
                               this.setAppearance(theme)
                           },
                           _resetStylesOnLoad() {
                               const $resetStyles = document.createElement('style')
                               $resetStyles.innerText = `*{transition: unset !important;}`
                               $resetStyles.setAttribute('data-hs-appearance-onload-styles', '')
                               document.head.appendChild($resetStyles)
                               return $resetStyles
                           },
                           setAppearance(theme, saveInStore = true, dispatchEvent = true) {
                               const $resetStylesEl = this._resetStylesOnLoad()

                               if (saveInStore) {
                                   localStorage.setItem('hs_theme', theme)
                               }

                               if (theme === 'auto') {
                                   theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'
                               }

                               document.querySelector('html').classList.remove('dark')
                               document.querySelector('html').classList.remove('default')
                               document.querySelector('html').classList.remove('auto')

                               document.querySelector('html').classList.add(this.getOriginalAppearance())

                               setTimeout(() => {
                                   $resetStylesEl.remove()
                               })

                               if (dispatchEvent) {
                                   window.dispatchEvent(new CustomEvent('on-hs-appearance-change', {detail: theme}))
                               }
                           },
                           getAppearance() {
                               let theme = this.getOriginalAppearance()
                               if (theme === 'auto') {
                                   theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'
                               }
                               return theme
                           },
                           getOriginalAppearance() {
                               const defaultTheme = 'default'
                               return localStorage.getItem('hs_theme') || defaultTheme
                           }
                       }
                       HSThemeAppearance.init()

                       window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
                           if (HSThemeAppearance.getOriginalAppearance() === 'auto') {
                               HSThemeAppearance.setAppearance('auto', false)
                           }
                       })

                       window.addEventListener('load', () => {
                           const $clickableThemes = document.querySelectorAll('[data-hs-theme-click-value]')
                           const $switchableThemes = document.querySelectorAll('[data-hs-theme-switch]')

                           $clickableThemes.forEach($item => {
                               $item.addEventListener('click', () => HSThemeAppearance.setAppearance($item.getAttribute('data-hs-theme-click-value'), true, $item))
                           })

                           $switchableThemes.forEach($item => {
                               $item.addEventListener('change', (e) => {
                                   HSThemeAppearance.setAppearance(e.target.checked ? 'dark' : 'default')
                               })

                               $item.checked = HSThemeAppearance.getAppearance() === 'dark'
                           })

                           window.addEventListener('on-hs-appearance-change', e => {
                               $switchableThemes.forEach($item => {
                                   $item.checked = e.detail === 'dark'
                               })
                           })
                       })
                   })
               </script>
               <div class="hs-dropdown mx-2" data-hs-dropdown-placement="bottom-right" data-hs-dropdown-offset="30">
                   <button type="button" class="hs-dropdown-toggle hs-dark-mode group flex items-center text-gray-600 hover:text-blue-600 font-medium dark:text-gray-400 dark:hover:text-gray-500">
                       <svg class="hs-dark-mode-active:hidden block size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z"/></svg>
                       <svg class="hs-dark-mode-active:block hidden size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="4"/><path d="M12 8a2 2 0 1 0 4 4"/><path d="M12 2v2"/><path d="M12 20v2"/><path d="m4.93 4.93 1.41 1.41"/><path d="m17.66 17.66 1.41 1.41"/><path d="M2 12h2"/><path d="M20 12h2"/><path d="m6.34 17.66-1.41 1.41"/><path d="m19.07 4.93-1.41 1.41"/></svg>
                   </button>

                   <div id="selectThemeDropdown" class="hs-dropdown-menu hs-dropdown-open:opacity-100 mt-2 hidden z-10 transition-[margin,opacity] opacity-0 duration-300 mb-2 origin-bottom-left bg-white shadow-md rounded-lg p-2 space-y-1 dark:bg-gray-800 dark:border dark:border-gray-700 dark:divide-gray-700">
                       <button type="button" class="hs-default-mode-active:bg-gray-100 w-full flex items-center gap-x-3.5 py-2 px-3 rounded-lg text-sm text-gray-800 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-gray-300" data-hs-theme-click-value="default">
                           Mode Terang
                       </button>
                       <button type="button" class="hs-dark-mode-active:bg-gray-700 w-full flex items-center gap-x-3.5 py-2 px-3 rounded-lg text-sm text-gray-800 hover:bg-gray-100 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-gray-300" data-hs-theme-click-value="dark">
                           Mode Malam
                       </button>
                   </div>
               </div>
            </div>
        </div>
    </nav>
</header>

<!-- END HEADER -->
<div class="max-w-screen-xl container mx-auto px-5 py-5">

    {% if app.session.getFlashMessage('success') is not empty %}
        <div class="bg-teal-50 border-t-2 border-teal-500 rounded-lg p-4 mb-4 dark:bg-teal-800/30" role="alert">
            <div class="flex">
                <div class="flex-shrink-0">
                    <span class="inline-flex justify-center items-center size-8 rounded-full border-4 border-teal-100 bg-teal-200 text-teal-800 dark:border-teal-900 dark:bg-teal-800 dark:text-teal-400"><svg class="flex-shrink-0 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10z"/><path d="m9 12 2 2 4-4"/></svg></span>
                </div>
                <div class="ms-3">
                    <h3 class="text-gray-800 font-semibold dark:text-white">
                        Berjaya!
                    </h3>
                    <p class="text-sm text-gray-700 dark:text-gray-400">
                        {{ app.session.getFlashMessage('success').value }}
                        {% for result in results %}
                            <div class="text-sm text-gray-700 dark:text-gray-400">{{ result }}</div>
                        {% endfor %}
                    </p>
                </div>
            </div>
        </div>
    {% endif %}

    {% if app.session.getFlashMessage('error') is not empty %}
        <div class="bg-red-50 border-s-4 border-red-500 p-4 mb-4 dark:bg-red-800/30" role="alert">
            <div class="flex">
                <div class="flex-shrink-0">
                    <span class="inline-flex justify-center items-center size-8 rounded-full border-4 border-red-100 bg-red-200 text-red-800 dark:border-red-900 dark:bg-red-800 dark:text-red-400"><svg class="flex-shrink-0 size-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg></span>
                </div>
                <div class="ms-3">
                    <h3 class="text-gray-800 font-semibold dark:text-white">
                        Kesalahan Berlaku!
                    </h3>
                    <p class="text-sm text-gray-700 dark:text-gray-400">
                        {{ app.session.getFlashMessage('error').value }}
                    </p>
                </div>
            </div>
        </div>
    {% endif %}

    {% block content %} {% endblock %}
</div>
</body>
</html>